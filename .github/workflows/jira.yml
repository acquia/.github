name: Sync GitHub issues to Jira
on:
  workflow_call:
    secrets:
      # Base URL is deprecated, now provided as org variable.
      jira-base-url:
        required: false
      jira-user-email:
        required: true
      jira-api-token:
        required: true
      github-token:
        required: true
    inputs:
      issue_label:
        required: false
        type: string
jobs:
  open:
    if: github.event.action == 'opened'
    runs-on: ubuntu-22.04
    name: Create new tickets in Jira
    permissions:
      issues: write
    steps:
    - name: Login
      uses: atlassian/gajira-login@v3
      env:
        JIRA_BASE_URL: ${{ vars.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.jira-user-email }}
        JIRA_API_TOKEN: ${{ secrets.jira-api-token }}
    - name: Set issue type
      id: issue_type
      run: |
        case $ISSUE_LABEL in
          bug)
            echo "type=Bug" >> $GITHUB_OUTPUT
            ;;
          enhancement)
            echo "type=Story" >> $GITHUB_OUTPUT
            ;;
          support)
            echo "type=Priority Support" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "type=Task" >> $GITHUB_OUTPUT
            ;;
          esac
      env:
        ISSUE_LABEL: ${{ github.event.issue.labels[0].name }}
    - name: Get project key
      id: project_key
      env:
        GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
      run: |
        echo "key=${GITHUB_REPOSITORY_NAME^^}" >> $GITHUB_OUTPUT
    - name: Set fields
      id: set_fields
      run: |
        echo "fields={\"labels\":[\"$ISSUE_LABEL\"]}" >> $GITHUB_OUTPUT
      env:
        ISSUE_LABEL: ${{ inputs.issue_label }}
    - name: Create
      id: create
      uses: atlassian/gajira-create@v3
      with:
        project: ${{ steps.project_key.outputs.key }}
        issuetype: ${{ steps.issue_type.outputs.type }}
        summary: ${{ github.event.issue.title }}
        description: ${{ github.event.issue.body }}
        fields: ${{ steps.set_fields.outputs.fields }}
    - name: Add web link
      id: link
      run: |
        curl --request POST \
        --url "$JIRA_BASE_URL/rest/api/3/issue/$JIRA_ISSUE/remotelink" \
        --data '{"object": {"url":"'"$GH_ISSUE"'","title":"'"$GH_ISSUE"'"}}' \
        --user "$JIRA_USER_EMAIL:$JIRA_API_TOKEN" \
        --header 'Accept: application/json' \
        --header 'Content-Type: application/json'
      env:
        JIRA_BASE_URL: ${{ vars.JIRA_BASE_URL }}
        JIRA_API_TOKEN: ${{ secrets.jira-api-token }}
        JIRA_USER_EMAIL: ${{ secrets.jira-user-email }}
        JIRA_ISSUE: ${{ steps.create.outputs.issue }}
        GH_ISSUE: ${{ github.event.issue.html_url }}
    - name: Update Github issue with Jira ticket prefix
      run: 'gh issue edit $GH_ISSUE --title "$JIRA_ISSUE: $ISSUE_TITLE"'
      env:
        GITHUB_TOKEN: ${{ secrets.github-token }}
        GH_ISSUE: ${{ github.event.issue.html_url }}
        JIRA_ISSUE: ${{ steps.create.outputs.issue }}
        ISSUE_TITLE: ${{ github.event.issue.title }}
  close:
    if: github.event.action == 'closed'
    runs-on: ubuntu-22.04
    name: Comment in Jira
    permissions:
      issues: write
    steps:
      - name: Download Jira CLI
        run: 'curl https://github.com/go-jira/jira/releases/download/v1.0.27/jira-linux-amd64 -o jira && chmod +x jira'
      - name: Comment
        env:
          JIRA_BASE_URL: ${{ vars.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.jira-user-email }}
          JIRA_API_TOKEN: ${{ secrets.jira-api-token }}
        run: './jira comment CLI-1280 -m "test"'
