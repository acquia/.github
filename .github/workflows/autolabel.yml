name: Auto-label pull requests
on:
  workflow_call:
    secrets:
      github-token:
        required: true
      jira-base-url:
        required: false
      jira-api-token:
        required: false
jobs:
  autolabel:
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{ secrets.github-token }}
      GITHUB_PR: ${{ github.event.pull_request.number }}
      GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
    steps:
      - name: Get linked issue label
        run: |
          LABEL=$(gh api graphql -F owner=$GITHUB_REPOSITORY_OWNER -F name=$GITHUB_REPOSITORY_NAME -F number=$GITHUB_PR -f query='
            query($owner:String!, $name:String!, $number:Int!){
              repository(owner:$owner, name:$name) {
                pullRequest(number:$number) {
                  closingIssuesReferences (first:1) {
                    edges {
                      node {
                        labels (first:1) {
                          edges {
                            node {
                              name
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ' --jq '.data.repository.pullRequest.closingIssuesReferences.edges.[].node.labels.edges.[].node.name')
          echo "LABEL=$LABEL" >> $GITHUB_ENV
      - name: Get project key
        id: project_key
        if: env.LABEL == ''
        env:
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
        run: |
          echo "key=${GITHUB_REPOSITORY_NAME^^}" >> $GITHUB_OUTPUT
      - name: Get Jira issue
        id: get-issue
        if: env.LABEL == ''
        run: |
          if [[ "$PR_TITLE" =~ ^($PROJECT_KEY-[0-9]+): ]]; then
              echo "issue=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          fi
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          PROJECT_KEY: ${{ steps.project_key.outputs.key }}
      - name: Login
        if: steps.get-issue.outputs.issue
        uses: acquia/gajira-login@bearer
        env:
          JIRA_BASE_URL: ${{ secrets.jira-base-url }}
          JIRA_API_TOKEN: ${{ secrets.jira-api-token }}
      - name: Get issue type
        if: steps.get-issue.outputs.issue
        uses: acquia/gajira-comment@bearer
        with:
          issue: ${{ steps.get-issue.outputs.issue }}
          comment: The GitHub issue corresponding to this ticket has been closed
      - name: Get label
        id: issue_type
        run: |
          case $ISSUE_LABEL in
            bug)
              echo "type=Bug" >> $GITHUB_OUTPUT
              ;;
            enhancement)
              echo "type=Story" >> $GITHUB_OUTPUT
              ;;
            support)
              echo "type=Priority Support" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "type=Task" >> $GITHUB_OUTPUT
              ;;
            esac
        env:
          ISSUE_LABEL: ${{ github.event.issue.labels[0].name }}
      - name: Apply label
        if: env.LABEL != ''
        run: gh pr edit https://github.com/$GITHUB_REPOSITORY/pull/$GITHUB_PR --add-label "$LABEL"
  require_label:
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: read
    needs: autolabel
    steps:
      - run: gh pr view --json labels https://github.com/$GITHUB_REPOSITORY/pull/$GITHUB_PR | jq -r '.labels[0].name' | grep -q 'null' && echo "You must apply at least one label" && exit 1 || exit 0
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
          GITHUB_PR: ${{ github.event.pull_request.number }}
